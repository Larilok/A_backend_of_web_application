syntax = "proto3";

service PostsService {
  rpc GetCategories(Empty) returns (Categories) {}
  rpc GetCategory(Id) returns (Category) {}
  rpc GetPost(PostOperation) returns (Post) {}
  rpc AddPost(NewPost) returns (Result) {}
  rpc UpdatePost(UpdatePostOperation) returns (Result) {}
  rpc DeletePost(PostOperation) returns (Result) {}
  rpc ListPosts(Pagination) returns (PagiantionResult) {}
  rpc ListPostsByUser(PaginationByUser) returns (PagiantionResult) {}
  rpc ListPostsByCategoryId(PaginationByCategoryId) returns (PagiantionResult) {}
  rpc ListPostsByKeyword(PaginationByKeyword) returns (PagiantionResult) {}
  rpc ListPostsByKeywordAndCategoryId(PaginationByKeywordAndCategoryId) returns (PagiantionResult) {}
  rpc BookPost(BookPostOperation) returns (Result) {}
}

message Empty {}

message Id {
  int32 id = 1;
}

message Category {
  int32 id = 1;
  string name = 2;
  string created_at = 3;
  string updated_at = 4; 
}

message Categories {
  repeated Category categories = 1;
}

message PagiantionResult {
  repeated Post posts = 1;
  int32 total = 2;
}

message Post {
  int32 id = 1;
  int32 category_id = 2;
  int32 user_id = 3;
  string title = 4;
  string description = 5;
  uint32 price = 6;
  string picture_url = 7;
  bool is_active = 8;
  string created_at = 9 ;
  string updated_at = 10; 
}

message NewPost {
  int32 category_id = 1;
  int32 user_id = 2;
  string title = 3;
  string description = 4;
  uint32 price = 5;
  string picture_url = 6;
  bool is_active = 7;
  PostType type = 8;
}

enum PostType {
  REQ = 0;
  OFFER = 1;
}

message UpdatePostOperation {
  int32 id = 1;
  PostType type = 2;
  string fieldname = 3;
  string value = 4;
}

message PostOperation {
  int32 id = 1;
  PostType type = 2;
}

message BookPostOperation {
  int32 id = 1;
  PostType type = 2;
  int32 booked_user_id = 3;
}

message Pagination {
  int32 page_num = 1;
  int32 limit = 2;
  PostType type = 3;
}

message PaginationByUser {
  int32 page_num = 1;
  int32 limit = 2;
  PostType type = 3;
  int32 user_id = 4;
}

message PaginationByCategoryId {
  int32 page_num = 1;
  int32 limit = 2;
  PostType type = 3;
  int32 category_id = 4;
}

message PaginationByKeyword {
  int32 page_num = 1;
  int32 limit = 2;
  PostType type = 3;
  string keyword = 4;
}

message PaginationByKeywordAndCategoryId {
  int32 page_num = 1;
  int32 limit = 2;
  PostType type = 3;
  string keyword = 4;
  int32 category_id = 5;
}

message Result { 
  string data = 1;
}
